name: Docker CI/CD

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release", "main" ]

env:
  REGISTRY: ghcr.io
  REGISTRY_PATH: ni2be
  IMAGE_NAME_BACKEND: mjordansdev-backend
  FILE_NAME_BACKEND: backend.dockerfile
  IMAGE_NAME_FRONTEND: mjordansdev-frontend
  FILE_NAME_FRONTEND: frontend.dockerfile
  IMAGE_TAG: latest #0.0.${{ github.run_number }}
  
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - name: checkout
      uses: actions/checkout@v3
      with:
          lfs: 'true'
          submodules: 'recursive'
          ssh-key: ${{ secrets.git_ssh_key }}
    - name: checkoutLFS
      uses: actions/checkout@v3
    - run: git lfs pull
    - run: git lfs checkout

    - name: Docker Setup
      uses: docker/setup-buildx-action@v1
    
    - name: Docker Login
      uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Docker metadata
      id: meta-backend
      uses: docker/metadata-action@v1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_BACKEND }}
        
    - name: Build the backend Docker image
      id: build-and-push-backend
      uses: docker/build-push-action@v3.1.1
      with:
        push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/release' }}
        tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME_BACKEND }}:${{ env.IMAGE_TAG }}
        labels: ${{ steps.meta-backend.outputs.labels }}
        file: ${{ env.FILE_NAME_BACKEND }}
        
    - name: Docker metadata
      id: meta-frontend
      uses: docker/metadata-action@v1
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME_FRONTEND }}
        
    - name: Build the frontend Docker image
      id: build-and-push-frontend
      uses: docker/build-push-action@v3.1.1
      with:
        push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/release' }}
        tags: ${{ env.REGISTRY }}/${{ env.REGISTRY_PATH }}/${{ env.IMAGE_NAME_FRONTEND }}:${{ env.IMAGE_TAG }}
        labels: ${{ steps.meta-frontend.outputs.labels }}
        file: ${{ env.FILE_NAME_FRONTEND }}
